

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Feb 06 02:37:41 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 09/04/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0008                     _PORTD	set	8
   367  0018                     _RCSTAbits	set	24
   368  004A                     _RE2	set	74
   369  0048                     _RE0	set	72
   370  0088                     _TRISD	set	136
   371  0089                     _TRISE	set	137
   372  009A                     _SPBRGH	set	154
   373  0099                     _SPBRG	set	153
   374  0098                     _TXSTAbits	set	152
   375  008F                     _OSCCONbits	set	143
   376  0188                     _ANSEL	set	392
   377  0187                     _BAUDCTLbits	set	391
   378                           
   379                           	psect	strings
   380  0003                     __pstrings:
   381  0003                     stringtab:
   382  0003                     __stringtab:
   383  0003                     stringcode:	
   384                           ;	String table - string pointers are 1 byte each
   385                           
   386  0003                     stringdir:
   387  0003  3000               	movlw	high stringdir
   388  0004  008A               	movwf	10
   389  0005  0804               	movf	4,w
   390  0006  0A84               	incf	4,f
   391  0007  0782               	addwf	2,f
   392  0008                     __stringbase:
   393  0008  3400               	retlw	0
   394  0009                     __end_of__stringtab:
   395  0009                     STR_5:
   396  0009  3477               	retlw	119	;'w'
   397  000A  3477               	retlw	119	;'w'
   398  000B  3477               	retlw	119	;'w'
   399  000C  342E               	retlw	46	;'.'
   400  000D  3465               	retlw	101	;'e'
   401  000E  346C               	retlw	108	;'l'
   402  000F  3465               	retlw	101	;'e'
   403  0010  3463               	retlw	99	;'c'
   404  0011  3474               	retlw	116	;'t'
   405  0012  3472               	retlw	114	;'r'
   406  0013  346F               	retlw	111	;'o'
   407  0014  3453               	retlw	83	;'S'
   408  0015  346F               	retlw	111	;'o'
   409  0016  346D               	retlw	109	;'m'
   410  0017  3465               	retlw	101	;'e'
   411  0018  342E               	retlw	46	;'.'
   412  0019  3463               	retlw	99	;'c'
   413  001A  346F               	retlw	111	;'o'
   414  001B  346D               	retlw	109	;'m'
   415  001C  3400               	retlw	0
   416  001D                     STR_1:
   417  001D  344C               	retlw	76	;'L'
   418  001E  3443               	retlw	67	;'C'
   419  001F  3444               	retlw	68	;'D'
   420  0020  3420               	retlw	32	;' '
   421  0021  344C               	retlw	76	;'L'
   422  0022  3469               	retlw	105	;'i'
   423  0023  3462               	retlw	98	;'b'
   424  0024  3472               	retlw	114	;'r'
   425  0025  3461               	retlw	97	;'a'
   426  0026  3472               	retlw	114	;'r'
   427  0027  3479               	retlw	121	;'y'
   428  0028  3420               	retlw	32	;' '
   429  0029  3466               	retlw	102	;'f'
   430  002A  346F               	retlw	111	;'o'
   431  002B  3472               	retlw	114	;'r'
   432  002C  3400               	retlw	0
   433  002D                     STR_3:
   434  002D  3444               	retlw	68	;'D'
   435  002E  3465               	retlw	101	;'e'
   436  002F  3476               	retlw	118	;'v'
   437  0030  3465               	retlw	101	;'e'
   438  0031  346C               	retlw	108	;'l'
   439  0032  346F               	retlw	111	;'o'
   440  0033  3470               	retlw	112	;'p'
   441  0034  3465               	retlw	101	;'e'
   442  0035  3464               	retlw	100	;'d'
   443  0036  3420               	retlw	32	;' '
   444  0037  3442               	retlw	66	;'B'
   445  0038  3479               	retlw	121	;'y'
   446  0039  3400               	retlw	0
   447  003A                     STR_4:
   448  003A  3465               	retlw	101	;'e'
   449  003B  346C               	retlw	108	;'l'
   450  003C  3465               	retlw	101	;'e'
   451  003D  3463               	retlw	99	;'c'
   452  003E  3474               	retlw	116	;'t'
   453  003F  3472               	retlw	114	;'r'
   454  0040  346F               	retlw	111	;'o'
   455  0041  3453               	retlw	83	;'S'
   456  0042  346F               	retlw	111	;'o'
   457  0043  346D               	retlw	109	;'m'
   458  0044  3465               	retlw	101	;'e'
   459  0045  3400               	retlw	0
   460  0046                     STR_2:
   461  0046  344D               	retlw	77	;'M'
   462  0047  3450               	retlw	80	;'P'
   463  0048  344C               	retlw	76	;'L'
   464  0049  3441               	retlw	65	;'A'
   465  004A  3442               	retlw	66	;'B'
   466  004B  3420               	retlw	32	;' '
   467  004C  3458               	retlw	88	;'X'
   468  004D  3443               	retlw	67	;'C'
   469  004E  3438               	retlw	56	;'8'
   470  004F  3400               	retlw	0
   471                           
   472                           	psect	cinit
   473  07FC                     start_initialization:	
   474                           ; #config settings
   475                           
   476  07FC                     __initialization:
   477  07FC                     end_of_initialization:	
   478                           ;End of C runtime variable initialization code
   479                           
   480  07FC                     __end_of__initialization:
   481  07FC  0183               	clrf	3
   482  07FD  120A  118A  2F0F   	ljmp	_main	;jump to C main() function
   483                           
   484                           	psect	cstackCOMMON
   485  0070                     __pcstackCOMMON:
   486  0070                     ?_Lcd_Port:
   487  0070                     ??_Lcd_Port:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_Lcd_Cmd:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_Lcd_Init:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_Lcd_Write_Char:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_Lcd_Write_String:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_Lcd_Shift_Right:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_Lcd_Shift_Left:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_Lcd_Clear:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_main:	
   512                           ; 2 bytes @ 0x0
   513                           
   514  0070                     Lcd_Port@a:	
   515                           ; 2 bytes @ 0x0
   516                           
   517                           
   518                           ; 1 bytes @ 0x0
   519  0070                     	ds	1
   520  0071                     ??_Lcd_Cmd:
   521  0071                     ??_Lcd_Write_Char:	
   522                           ; 1 bytes @ 0x1
   523                           
   524                           
   525                           ; 1 bytes @ 0x1
   526  0071                     	ds	1
   527  0072                     Lcd_Write_Char@a:
   528                           
   529                           ; 1 bytes @ 0x2
   530  0072                     	ds	1
   531  0073                     ??_Lcd_Write_String:
   532  0073                     Lcd_Cmd@a:	
   533                           ; 1 bytes @ 0x3
   534                           
   535  0073                     Lcd_Write_String@i:	
   536                           ; 1 bytes @ 0x3
   537                           
   538                           
   539                           ; 2 bytes @ 0x3
   540  0073                     	ds	1
   541  0074                     ??_Lcd_Clear:
   542  0074                     ?_Lcd_Set_Cursor:	
   543                           ; 1 bytes @ 0x4
   544                           
   545  0074                     ??_Lcd_Init:	
   546                           ; 1 bytes @ 0x4
   547                           
   548  0074                     ??_Lcd_Shift_Right:	
   549                           ; 1 bytes @ 0x4
   550                           
   551  0074                     ??_Lcd_Shift_Left:	
   552                           ; 1 bytes @ 0x4
   553                           
   554  0074                     Lcd_Set_Cursor@b:	
   555                           ; 1 bytes @ 0x4
   556                           
   557                           
   558                           ; 1 bytes @ 0x4
   559  0074                     	ds	1
   560  0075                     ??_Lcd_Set_Cursor:
   561  0075                     Lcd_Set_Cursor@a:	
   562                           ; 1 bytes @ 0x5
   563                           
   564  0075                     Lcd_Write_String@a:	
   565                           ; 1 bytes @ 0x5
   566                           
   567                           
   568                           ; 1 bytes @ 0x5
   569  0075                     	ds	1
   570  0076                     Lcd_Set_Cursor@temp:
   571                           
   572                           ; 1 bytes @ 0x6
   573  0076                     	ds	1
   574  0077                     ??_main:
   575                           
   576                           ; 1 bytes @ 0x7
   577  0077                     	ds	3
   578  007A                     main@a:
   579                           
   580                           ; 2 bytes @ 0xA
   581  007A                     	ds	2
   582                           
   583                           	psect	maintext
   584  070F                     __pmaintext:	
   585 ;;
   586 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   587 ;;
   588 ;; *************** function _main *****************
   589 ;; Defined at:
   590 ;;		line 24 in file "C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  a               2   10[COMMON] unsigned int 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  2   79[None  ] int 
   597 ;; Registers used:
   598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : B00/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         2       0       0       0       0
   606 ;;      Temps:          3       0       0       0       0
   607 ;;      Totals:         5       0       0       0       0
   608 ;;Total ram usage:        5 bytes
   609 ;; Hardware stack levels required when called:    3
   610 ;; This function calls:
   611 ;;		_Lcd_Clear
   612 ;;		_Lcd_Init
   613 ;;		_Lcd_Set_Cursor
   614 ;;		_Lcd_Shift_Left
   615 ;;		_Lcd_Shift_Right
   616 ;;		_Lcd_Write_Char
   617 ;;		_Lcd_Write_String
   618 ;; This function is called by:
   619 ;;		Startup code after reset
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _main
   625  070F                     _main:
   626  070F                     l855:	
   627                           ;incstack = 0
   628                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   629                           
   630                           
   631                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 26:     for(a=0;a<15;a++);C:/MPlab_Di
      +                          gital2/Digital_2/Prueba_UART.X/main.c: 27:     {
   632  070F  1683               	bsf	3,5	;RP0=1, select bank1
   633  0710  1303               	bcf	3,6	;RP1=0, select bank1
   634  0711  0189               	clrf	9	;volatile
   635                           
   636                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 28:         _delay((unsigned long)((3
      +                          00)*(8000000/4000.0)));
   637  0712  1683               	bsf	3,5	;RP0=1, select bank3
   638  0713  1703               	bsf	3,6	;RP1=1, select bank3
   639  0714  0188               	clrf	8	;volatile
   640                           
   641                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 29:         Lcd_Shift_Left();
   642  0715  1683               	bsf	3,5	;RP0=1, select bank1
   643  0716  1303               	bcf	3,6	;RP1=0, select bank1
   644  0717  0188               	clrf	8	;volatile
   645  0718                     l857:
   646                           
   647                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 30:     }
   648  0718  120A  118A  26C8  120A  118A  	fcall	_Lcd_Init
   649  071D                     l859:
   650                           
   651                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 32:     for(a=0;a<15;a++);C:/MPlab_Di
      +                          gital2/Digital_2/Prueba_UART.X/main.c: 33:     {
   652  071D  120A  118A  2627  120A  118A  	fcall	_Lcd_Clear
   653  0722                     l861:
   654                           
   655                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 34:         _delay((unsigned long)((3
      +                          00)*(8000000/4000.0)));
   656  0722  01F4               	clrf	Lcd_Set_Cursor@b
   657  0723  0AF4               	incf	Lcd_Set_Cursor@b,f
   658  0724  3001               	movlw	1
   659  0725  120A  118A  267F  120A  118A  	fcall	_Lcd_Set_Cursor
   660  072A                     l863:
   661                           
   662                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 35:         Lcd_Shift_Right();
   663  072A  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   664  072B  120A  118A  26A3  120A  118A  	fcall	_Lcd_Write_String
   665  0730                     l865:
   666                           
   667                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 36:     }
   668  0730  01F4               	clrf	Lcd_Set_Cursor@b
   669  0731  0AF4               	incf	Lcd_Set_Cursor@b,f
   670  0732  3002               	movlw	2
   671  0733  120A  118A  267F  120A  118A  	fcall	_Lcd_Set_Cursor
   672  0738                     l867:
   673                           
   674                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 37: 
   675  0738  303E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   676  0739  120A  118A  26A3  120A  118A  	fcall	_Lcd_Write_String
   677  073E                     l869:
   678                           
   679                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 38:     Lcd_Clear();
   680  073E  3015               	movlw	21
   681  073F  00F9               	movwf	??_main+2
   682  0740  304B               	movlw	75
   683  0741  00F8               	movwf	??_main+1
   684  0742  30BE               	movlw	190
   685  0743  00F7               	movwf	??_main
   686  0744                     u117:
   687  0744  0BF7               	decfsz	??_main,f
   688  0745  2F44               	goto	u117
   689  0746  0BF8               	decfsz	??_main+1,f
   690  0747  2F44               	goto	u117
   691  0748  0BF9               	decfsz	??_main+2,f
   692  0749  2F44               	goto	u117
   693  074A  0000               	nop
   694  074B                     l871:
   695                           
   696                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 39:     Lcd_Set_Cursor(2,1);
   697  074B  120A  118A  2627  120A  118A  	fcall	_Lcd_Clear
   698  0750                     l873:
   699                           
   700                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 40:     Lcd_Write_Char('e');
   701  0750  01F4               	clrf	Lcd_Set_Cursor@b
   702  0751  0AF4               	incf	Lcd_Set_Cursor@b,f
   703  0752  3001               	movlw	1
   704  0753  120A  118A  267F  120A  118A  	fcall	_Lcd_Set_Cursor
   705  0758                     l875:
   706                           
   707                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 41:     Lcd_Write_Char('S');
   708  0758  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   709  0759  120A  118A  26A3  120A  118A  	fcall	_Lcd_Write_String
   710  075E                     l877:
   711                           
   712                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 42:     _delay((unsigned long)((2000)
      +                          *(8000000/4000.0)));
   713  075E  01F4               	clrf	Lcd_Set_Cursor@b
   714  075F  0AF4               	incf	Lcd_Set_Cursor@b,f
   715  0760  3002               	movlw	2
   716  0761  120A  118A  267F  120A  118A  	fcall	_Lcd_Set_Cursor
   717  0766                     l879:
   718                           
   719                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 43:   }
   720  0766  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   721  0767  120A  118A  26A3  120A  118A  	fcall	_Lcd_Write_String
   722  076C                     l881:
   723                           
   724                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 44:   return 0;
   725  076C  3015               	movlw	21
   726  076D  00F9               	movwf	??_main+2
   727  076E  304B               	movlw	75
   728  076F  00F8               	movwf	??_main+1
   729  0770  30BE               	movlw	190
   730  0771  00F7               	movwf	??_main
   731  0772                     u127:
   732  0772  0BF7               	decfsz	??_main,f
   733  0773  2F72               	goto	u127
   734  0774  0BF8               	decfsz	??_main+1,f
   735  0775  2F72               	goto	u127
   736  0776  0BF9               	decfsz	??_main+2,f
   737  0777  2F72               	goto	u127
   738  0778  0000               	nop
   739  0779                     l883:
   740                           
   741                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/main.c: 45: }
   742  0779  120A  118A  2627  120A  118A  	fcall	_Lcd_Clear
   743  077E                     l885:
   744  077E  01F4               	clrf	Lcd_Set_Cursor@b
   745  077F  0AF4               	incf	Lcd_Set_Cursor@b,f
   746  0780  3001               	movlw	1
   747  0781  120A  118A  267F  120A  118A  	fcall	_Lcd_Set_Cursor
   748  0786                     l887:
   749  0786  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   750  0787  120A  118A  26A3  120A  118A  	fcall	_Lcd_Write_String
   751  078C                     l889:
   752  078C  01FA               	clrf	main@a
   753  078D  01FB               	clrf	main@a+1
   754  078E                     l895:
   755  078E  3004               	movlw	4
   756  078F  00F9               	movwf	??_main+2
   757  0790  300C               	movlw	12
   758  0791  00F8               	movwf	??_main+1
   759  0792  3033               	movlw	51
   760  0793  00F7               	movwf	??_main
   761  0794                     u137:
   762  0794  0BF7               	decfsz	??_main,f
   763  0795  2F94               	goto	u137
   764  0796  0BF8               	decfsz	??_main+1,f
   765  0797  2F94               	goto	u137
   766  0798  0BF9               	decfsz	??_main+2,f
   767  0799  2F94               	goto	u137
   768  079A  2F9B               	nop2
   769  079B                     l897:
   770  079B  120A  118A  2634  120A  118A  	fcall	_Lcd_Shift_Left
   771  07A0                     l899:
   772  07A0  3001               	movlw	1
   773  07A1  07FA               	addwf	main@a,f
   774  07A2  1803               	skipnc
   775  07A3  0AFB               	incf	main@a+1,f
   776  07A4  3000               	movlw	0
   777  07A5  07FB               	addwf	main@a+1,f
   778  07A6                     l901:
   779  07A6  3000               	movlw	0
   780  07A7  027B               	subwf	main@a+1,w
   781  07A8  300F               	movlw	15
   782  07A9  1903               	skipnz
   783  07AA  027A               	subwf	main@a,w
   784  07AB  1C03               	skipc
   785  07AC  2FAE               	goto	u91
   786  07AD  2FAF               	goto	u90
   787  07AE                     u91:
   788  07AE  2F8E               	goto	l895
   789  07AF                     u90:
   790  07AF                     l903:
   791  07AF  01FA               	clrf	main@a
   792  07B0  01FB               	clrf	main@a+1
   793  07B1                     l909:
   794  07B1  3004               	movlw	4
   795  07B2  00F9               	movwf	??_main+2
   796  07B3  300C               	movlw	12
   797  07B4  00F8               	movwf	??_main+1
   798  07B5  3033               	movlw	51
   799  07B6  00F7               	movwf	??_main
   800  07B7                     u147:
   801  07B7  0BF7               	decfsz	??_main,f
   802  07B8  2FB7               	goto	u147
   803  07B9  0BF8               	decfsz	??_main+1,f
   804  07BA  2FB7               	goto	u147
   805  07BB  0BF9               	decfsz	??_main+2,f
   806  07BC  2FB7               	goto	u147
   807  07BD  2FBE               	nop2
   808  07BE                     l911:
   809  07BE  120A  118A  2641  120A  118A  	fcall	_Lcd_Shift_Right
   810  07C3                     l913:
   811  07C3  3001               	movlw	1
   812  07C4  07FA               	addwf	main@a,f
   813  07C5  1803               	skipnc
   814  07C6  0AFB               	incf	main@a+1,f
   815  07C7  3000               	movlw	0
   816  07C8  07FB               	addwf	main@a+1,f
   817  07C9                     l915:
   818  07C9  3000               	movlw	0
   819  07CA  027B               	subwf	main@a+1,w
   820  07CB  300F               	movlw	15
   821  07CC  1903               	skipnz
   822  07CD  027A               	subwf	main@a,w
   823  07CE  1C03               	skipc
   824  07CF  2FD1               	goto	u101
   825  07D0  2FD2               	goto	u100
   826  07D1                     u101:
   827  07D1  2FB1               	goto	l909
   828  07D2                     u100:
   829  07D2                     l917:
   830  07D2  120A  118A  2627  120A  118A  	fcall	_Lcd_Clear
   831  07D7                     l919:
   832  07D7  01F4               	clrf	Lcd_Set_Cursor@b
   833  07D8  0AF4               	incf	Lcd_Set_Cursor@b,f
   834  07D9  3002               	movlw	2
   835  07DA  120A  118A  267F  120A  118A  	fcall	_Lcd_Set_Cursor
   836  07DF                     l921:
   837  07DF  3065               	movlw	101
   838  07E0  120A  118A  264E  120A  118A  	fcall	_Lcd_Write_Char
   839  07E5                     l923:
   840  07E5  3053               	movlw	83
   841  07E6  120A  118A  264E  120A  118A  	fcall	_Lcd_Write_Char
   842  07EB                     l925:
   843  07EB  3015               	movlw	21
   844  07EC  00F9               	movwf	??_main+2
   845  07ED  304B               	movlw	75
   846  07EE  00F8               	movwf	??_main+1
   847  07EF  30BE               	movlw	190
   848  07F0  00F7               	movwf	??_main
   849  07F1                     u157:
   850  07F1  0BF7               	decfsz	??_main,f
   851  07F2  2FF1               	goto	u157
   852  07F3  0BF8               	decfsz	??_main+1,f
   853  07F4  2FF1               	goto	u157
   854  07F5  0BF9               	decfsz	??_main+2,f
   855  07F6  2FF1               	goto	u157
   856  07F7  0000               	nop
   857  07F8  2F1D               	goto	l859
   858  07F9  120A  118A  2800   	ljmp	start
   859  07FC                     __end_of_main:
   860                           
   861                           	psect	text1
   862  06A3                     __ptext1:	
   863 ;; *************** function _Lcd_Write_String *****************
   864 ;; Defined at:
   865 ;;		line 113 in file "C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h"
   866 ;; Parameters:    Size  Location     Type
   867 ;;  a               1    wreg     PTR unsigned char 
   868 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   869 ;;		 -> STR_1(16), 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  a               1    5[COMMON] PTR unsigned char 
   872 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   873 ;;		 -> STR_1(16), 
   874 ;;  i               2    3[COMMON] int 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         0       0       0       0       0
   885 ;;      Locals:         3       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0
   887 ;;      Totals:         3       0       0       0       0
   888 ;;Total ram usage:        3 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; Hardware stack levels required when called:    2
   891 ;; This function calls:
   892 ;;		_Lcd_Write_Char
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           
   899                           ;psect for function _Lcd_Write_String
   900  06A3                     _Lcd_Write_String:
   901                           
   902                           ;incstack = 0
   903                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   904                           ;Lcd_Write_String@a stored from wreg
   905  06A3  00F5               	movwf	Lcd_Write_String@a
   906  06A4                     l847:
   907                           
   908                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 113: void Lcd_Write_String(char *a);C:
      +                          /MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 114: {;C:/MPlab_Digital2/Digital_2/Prueba
      +                          _UART.X/lcd.h: 115:  int i;;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 116:  for(i
      +                          =0;a[i]!='\0';i++)
   909  06A4  01F3               	clrf	Lcd_Write_String@i
   910  06A5  01F4               	clrf	Lcd_Write_String@i+1
   911  06A6  2EBA               	goto	l853
   912  06A7                     l849:
   913                           
   914                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 117:     Lcd_Write_Char(a[i]);
   915  06A7  0873               	movf	Lcd_Write_String@i,w
   916  06A8  0775               	addwf	Lcd_Write_String@a,w
   917  06A9  0084               	movwf	4
   918  06AA  120A  118A  2003  120A  118A  	fcall	stringdir
   919  06AF  120A  118A  264E  120A  118A  	fcall	_Lcd_Write_Char
   920  06B4                     l851:
   921  06B4  3001               	movlw	1
   922  06B5  07F3               	addwf	Lcd_Write_String@i,f
   923  06B6  1803               	skipnc
   924  06B7  0AF4               	incf	Lcd_Write_String@i+1,f
   925  06B8  3000               	movlw	0
   926  06B9  07F4               	addwf	Lcd_Write_String@i+1,f
   927  06BA                     l853:
   928  06BA  0873               	movf	Lcd_Write_String@i,w
   929  06BB  0775               	addwf	Lcd_Write_String@a,w
   930  06BC  0084               	movwf	4
   931  06BD  120A  118A  2003  120A  118A  	fcall	stringdir
   932  06C2  3A00               	xorlw	0
   933  06C3  1D03               	skipz
   934  06C4  2EC6               	goto	u81
   935  06C5  2EC7               	goto	u80
   936  06C6                     u81:
   937  06C6  2EA7               	goto	l849
   938  06C7                     u80:
   939  06C7                     l69:
   940  06C7  0008               	return
   941  06C8                     __end_of_Lcd_Write_String:
   942                           
   943                           	psect	text2
   944  064E                     __ptext2:	
   945 ;; *************** function _Lcd_Write_Char *****************
   946 ;; Defined at:
   947 ;;		line 96 in file "C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  a               1    wreg     unsigned char 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  a               1    2[COMMON] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, pclath, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         1       0       0       0       0
   963 ;;      Temps:          1       0       0       0       0
   964 ;;      Totals:         2       0       0       0       0
   965 ;;Total ram usage:        2 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    1
   968 ;; This function calls:
   969 ;;		_Lcd_Port
   970 ;; This function is called by:
   971 ;;		_Lcd_Write_String
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _Lcd_Write_Char
   978  064E                     _Lcd_Write_Char:
   979                           
   980                           ;incstack = 0
   981                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   982                           ;Lcd_Write_Char@a stored from wreg
   983  064E  00F2               	movwf	Lcd_Write_Char@a
   984  064F                     l691:
   985                           
   986                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 96: void Lcd_Write_Char(char a);C:/MPl
      +                          ab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 97: {;C:/MPlab_Digital2/Digital_2/Prueba_UART
      +                          .X/lcd.h: 101:    RE0 = 1;
   987  064F  1283               	bcf	3,5	;RP0=0, select bank0
   988  0650  1303               	bcf	3,6	;RP1=0, select bank0
   989  0651  1409               	bsf	9,0	;volatile
   990  0652                     l693:
   991                           
   992                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 106:    Lcd_Port(a);
   993  0652  0872               	movf	Lcd_Write_Char@a,w
   994  0653  120A  118A  2621  120A  118A  	fcall	_Lcd_Port
   995  0658                     l695:
   996                           
   997                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 107:    RE2 = 1;
   998  0658  1283               	bcf	3,5	;RP0=0, select bank0
   999  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1000  065A  1509               	bsf	9,2	;volatile
  1001  065B                     l697:
  1002                           
  1003                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 108:    _delay((unsigned long)((40)*(8
      +                          000000/4000000.0)));
  1004  065B  301A               	movlw	26
  1005  065C  00F1               	movwf	??_Lcd_Write_Char
  1006  065D                     u167:
  1007  065D  0BF1               	decfsz	??_Lcd_Write_Char,f
  1008  065E  2E5D               	goto	u167
  1009  065F  0000               	nop
  1010  0660                     l699:
  1011                           
  1012                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 109:    RE2 = 0;
  1013  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0662  1109               	bcf	9,2	;volatile
  1016  0663                     l701:
  1017                           
  1018                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 110:    RE0 = 0;
  1019  0663  1009               	bcf	9,0	;volatile
  1020  0664                     l63:
  1021  0664  0008               	return
  1022  0665                     __end_of_Lcd_Write_Char:
  1023                           
  1024                           	psect	text3
  1025  0641                     __ptext3:	
  1026 ;; *************** function _Lcd_Shift_Right *****************
  1027 ;; Defined at:
  1028 ;;		line 120 in file "C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0, pclath, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1042 ;;      Params:         0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0
  1045 ;;      Totals:         0       0       0       0       0
  1046 ;;Total ram usage:        0 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    2
  1049 ;; This function calls:
  1050 ;;		_Lcd_Cmd
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _Lcd_Shift_Right
  1058  0641                     _Lcd_Shift_Right:
  1059  0641                     l735:	
  1060                           ;incstack = 0
  1061                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  1062                           
  1063                           
  1064                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 122:  Lcd_Cmd(0x01);
  1065  0641  3001               	movlw	1
  1066  0642  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1067                           
  1068                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 123:  Lcd_Cmd(0x0C);
  1069  0647  300C               	movlw	12
  1070  0648  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1071  064D                     l72:
  1072  064D  0008               	return
  1073  064E                     __end_of_Lcd_Shift_Right:
  1074                           
  1075                           	psect	text4
  1076  0634                     __ptext4:	
  1077 ;; *************** function _Lcd_Shift_Left *****************
  1078 ;; Defined at:
  1079 ;;		line 126 in file "C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2, status,0, pclath, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0
  1096 ;;      Totals:         0       0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    2
  1100 ;; This function calls:
  1101 ;;		_Lcd_Cmd
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           
  1108                           ;psect for function _Lcd_Shift_Left
  1109  0634                     _Lcd_Shift_Left:
  1110  0634                     l737:	
  1111                           ;incstack = 0
  1112                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  1113                           
  1114                           
  1115                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 128:  Lcd_Cmd(0x01);
  1116  0634  3001               	movlw	1
  1117  0635  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1118                           
  1119                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 129:  Lcd_Cmd(0x08);
  1120  063A  3008               	movlw	8
  1121  063B  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1122  0640                     l75:
  1123  0640  0008               	return
  1124  0641                     __end_of_Lcd_Shift_Left:
  1125                           
  1126                           	psect	text5
  1127  067F                     __ptext5:	
  1128 ;; *************** function _Lcd_Set_Cursor *****************
  1129 ;; Defined at:
  1130 ;;		line 42 in file "C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  a               1    wreg     unsigned char 
  1133 ;;  b               1    4[COMMON] unsigned char 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  a               1    5[COMMON] unsigned char 
  1136 ;;  temp            1    6[COMMON] unsigned char 
  1137 ;;  y               1    0        unsigned char 
  1138 ;;  z               1    0        unsigned char 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1148 ;;      Params:         1       0       0       0       0
  1149 ;;      Locals:         2       0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0
  1151 ;;      Totals:         3       0       0       0       0
  1152 ;;Total ram usage:        3 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    2
  1155 ;; This function calls:
  1156 ;;		_Lcd_Cmd
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           
  1163                           ;psect for function _Lcd_Set_Cursor
  1164  067F                     _Lcd_Set_Cursor:
  1165                           
  1166                           ;incstack = 0
  1167                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1168                           ;Lcd_Set_Cursor@a stored from wreg
  1169  067F  00F5               	movwf	Lcd_Set_Cursor@a
  1170  0680                     l835:
  1171                           
  1172                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 42: void Lcd_Set_Cursor(char a, char b
      +                          );C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 43: {;C:/MPlab_Digital2/Digital_2/Pru
      +                          eba_UART.X/lcd.h: 44:  char temp,z,y;;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 4
      +                          5:  if(a == 1)
  1173  0680  0375               	decf	Lcd_Set_Cursor@a,w
  1174  0681  1D03               	btfss	3,2
  1175  0682  2E84               	goto	u61
  1176  0683  2E85               	goto	u60
  1177  0684                     u61:
  1178  0684  2E91               	goto	l841
  1179  0685                     u60:
  1180  0685                     l837:
  1181                           
  1182                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 46:  {;C:/MPlab_Digital2/Digital_2/Pru
      +                          eba_UART.X/lcd.h: 47:    temp = 0x80 + b - 1;
  1183  0685  0874               	movf	Lcd_Set_Cursor@b,w
  1184  0686  3E7F               	addlw	127
  1185  0687  00FF               	movwf	btemp+1
  1186  0688  087F               	movf	btemp+1,w
  1187  0689  00F6               	movwf	Lcd_Set_Cursor@temp
  1188  068A                     l839:
  1189                           
  1190                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 48:       Lcd_Cmd(temp);
  1191  068A  0876               	movf	Lcd_Set_Cursor@temp,w
  1192  068B  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1193                           
  1194                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 53:  }
  1195  0690  2EA2               	goto	l57
  1196  0691                     l841:
  1197  0691  3002               	movlw	2
  1198  0692  0675               	xorwf	Lcd_Set_Cursor@a,w
  1199  0693  1D03               	btfss	3,2
  1200  0694  2E96               	goto	u71
  1201  0695  2E97               	goto	u70
  1202  0696                     u71:
  1203  0696  2EA2               	goto	l57
  1204  0697                     u70:
  1205  0697                     l843:
  1206                           
  1207                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 55:  {;C:/MPlab_Digital2/Digital_2/Pru
      +                          eba_UART.X/lcd.h: 56:   temp = 0xC0 + b - 1;
  1208  0697  0874               	movf	Lcd_Set_Cursor@b,w
  1209  0698  3EBF               	addlw	191
  1210  0699  00FF               	movwf	btemp+1
  1211  069A  087F               	movf	btemp+1,w
  1212  069B  00F6               	movwf	Lcd_Set_Cursor@temp
  1213  069C                     l845:
  1214                           
  1215                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 57:         Lcd_Cmd(temp);
  1216  069C  0876               	movf	Lcd_Set_Cursor@temp,w
  1217  069D  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1218  06A2                     l57:
  1219  06A2  0008               	return
  1220  06A3                     __end_of_Lcd_Set_Cursor:
  1221                           
  1222                           	psect	text6
  1223  06C8                     __ptext6:	
  1224 ;; *************** function _Lcd_Init *****************
  1225 ;; Defined at:
  1226 ;;		line 65 in file "C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;		None
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2, status,0, pclath, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1240 ;;      Params:         0       0       0       0       0
  1241 ;;      Locals:         0       0       0       0       0
  1242 ;;      Temps:          2       0       0       0       0
  1243 ;;      Totals:         2       0       0       0       0
  1244 ;;Total ram usage:        2 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    2
  1247 ;; This function calls:
  1248 ;;		_Lcd_Cmd
  1249 ;;		_Lcd_Port
  1250 ;; This function is called by:
  1251 ;;		_main
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function _Lcd_Init
  1257  06C8                     _Lcd_Init:
  1258  06C8                     l717:	
  1259                           ;incstack = 0
  1260                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1261                           
  1262                           
  1263                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 67:       Lcd_Port(0x00);
  1264  06C8  3000               	movlw	0
  1265  06C9  120A  118A  2621  120A  118A  	fcall	_Lcd_Port
  1266  06CE                     l719:
  1267                           
  1268                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 68:       _delay((unsigned long)((10)*
      +                          (8000000/4000.0)));
  1269  06CE  301A               	movlw	26
  1270  06CF  00F5               	movwf	??_Lcd_Init+1
  1271  06D0  30F8               	movlw	248
  1272  06D1  00F4               	movwf	??_Lcd_Init
  1273  06D2                     u177:
  1274  06D2  0BF4               	decfsz	??_Lcd_Init,f
  1275  06D3  2ED2               	goto	u177
  1276  06D4  0BF5               	decfsz	??_Lcd_Init+1,f
  1277  06D5  2ED2               	goto	u177
  1278  06D6  0000               	nop
  1279  06D7                     l721:
  1280                           
  1281                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 69:       Lcd_Cmd(0x30);
  1282  06D7  3030               	movlw	48
  1283  06D8  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1284                           
  1285                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 70:    _delay((unsigned long)((4)*(800
      +                          0000/4000.0)));
  1286  06DD  300B               	movlw	11
  1287  06DE  00F5               	movwf	??_Lcd_Init+1
  1288  06DF  3062               	movlw	98
  1289  06E0  00F4               	movwf	??_Lcd_Init
  1290  06E1                     u187:
  1291  06E1  0BF4               	decfsz	??_Lcd_Init,f
  1292  06E2  2EE1               	goto	u187
  1293  06E3  0BF5               	decfsz	??_Lcd_Init+1,f
  1294  06E4  2EE1               	goto	u187
  1295  06E5  0000               	nop
  1296  06E6                     l723:
  1297                           
  1298                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 71:       Lcd_Cmd(0x30);
  1299  06E6  3030               	movlw	48
  1300  06E7  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1301  06EC                     l725:
  1302                           
  1303                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 72:    _delay((unsigned long)((80)*(80
      +                          00000/4000000.0)));
  1304  06EC  3035               	movlw	53
  1305  06ED  00F4               	movwf	??_Lcd_Init
  1306  06EE                     u197:
  1307  06EE  0BF4               	decfsz	??_Lcd_Init,f
  1308  06EF  2EEE               	goto	u197
  1309                           
  1310                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 73:       Lcd_Cmd(0x30);
  1311  06F0  3030               	movlw	48
  1312  06F1  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1313                           
  1314                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 75:       Lcd_Cmd(0x38);
  1315  06F6  3038               	movlw	56
  1316  06F7  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1317                           
  1318                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 76:       Lcd_Cmd(0x08);
  1319  06FC  3008               	movlw	8
  1320  06FD  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1321                           
  1322                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 77:       Lcd_Cmd(0x01);
  1323  0702  3001               	movlw	1
  1324  0703  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1325                           
  1326                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 78:       Lcd_Cmd(0x06);
  1327  0708  3006               	movlw	6
  1328  0709  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1329  070E                     l60:
  1330  070E  0008               	return
  1331  070F                     __end_of_Lcd_Init:
  1332                           
  1333                           	psect	text7
  1334  0627                     __ptext7:	
  1335 ;; *************** function _Lcd_Clear *****************
  1336 ;; Defined at:
  1337 ;;		line 36 in file "C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  2   50[None  ] int 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0
  1354 ;;      Totals:         0       0       0       0       0
  1355 ;;Total ram usage:        0 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    2
  1358 ;; This function calls:
  1359 ;;		_Lcd_Cmd
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           
  1366                           ;psect for function _Lcd_Clear
  1367  0627                     _Lcd_Clear:
  1368  0627                     l703:	
  1369                           ;incstack = 0
  1370                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1371                           
  1372                           
  1373                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 38:  Lcd_Cmd(0);
  1374  0627  3000               	movlw	0
  1375  0628  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1376                           
  1377                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 39:  Lcd_Cmd(1);
  1378  062D  3001               	movlw	1
  1379  062E  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1380  0633                     l51:
  1381  0633  0008               	return
  1382  0634                     __end_of_Lcd_Clear:
  1383                           
  1384                           	psect	text8
  1385  0665                     __ptext8:	
  1386 ;; *************** function _Lcd_Cmd *****************
  1387 ;; Defined at:
  1388 ;;		line 27 in file "C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  a               1    wreg     unsigned char 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  a               1    3[COMMON] unsigned char 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, pclath, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1402 ;;      Params:         0       0       0       0       0
  1403 ;;      Locals:         1       0       0       0       0
  1404 ;;      Temps:          2       0       0       0       0
  1405 ;;      Totals:         3       0       0       0       0
  1406 ;;Total ram usage:        3 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    1
  1409 ;; This function calls:
  1410 ;;		_Lcd_Port
  1411 ;; This function is called by:
  1412 ;;		_Lcd_Clear
  1413 ;;		_Lcd_Set_Cursor
  1414 ;;		_Lcd_Init
  1415 ;;		_Lcd_Shift_Right
  1416 ;;		_Lcd_Shift_Left
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           
  1421                           ;psect for function _Lcd_Cmd
  1422  0665                     _Lcd_Cmd:
  1423                           
  1424                           ;incstack = 0
  1425                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1426                           ;Lcd_Cmd@a stored from wreg
  1427  0665  00F3               	movwf	Lcd_Cmd@a
  1428  0666                     l681:
  1429                           
  1430                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 27: void Lcd_Cmd(char a);C:/MPlab_Digi
      +                          tal2/Digital_2/Prueba_UART.X/lcd.h: 28: {;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.
      +                          h: 29:  RE0 = 0;
  1431  0666  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0667  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0668  1009               	bcf	9,0	;volatile
  1434  0669                     l683:
  1435                           
  1436                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 30:  Lcd_Port(a);
  1437  0669  0873               	movf	Lcd_Cmd@a,w
  1438  066A  120A  118A  2621  120A  118A  	fcall	_Lcd_Port
  1439  066F                     l685:
  1440                           
  1441                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 31:  RE2 = 1;
  1442  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1444  0671  1509               	bsf	9,2	;volatile
  1445  0672                     l687:
  1446                           
  1447                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 32:         _delay((unsigned long)((4)
      +                          *(8000000/4000.0)));
  1448  0672  300B               	movlw	11
  1449  0673  00F2               	movwf	??_Lcd_Cmd+1
  1450  0674  3062               	movlw	98
  1451  0675  00F1               	movwf	??_Lcd_Cmd
  1452  0676                     u207:
  1453  0676  0BF1               	decfsz	??_Lcd_Cmd,f
  1454  0677  2E76               	goto	u207
  1455  0678  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1456  0679  2E76               	goto	u207
  1457  067A  0000               	nop
  1458  067B                     l689:
  1459                           
  1460                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 33:         RE2 = 0;
  1461  067B  1283               	bcf	3,5	;RP0=0, select bank0
  1462  067C  1303               	bcf	3,6	;RP1=0, select bank0
  1463  067D  1109               	bcf	9,2	;volatile
  1464  067E                     l48:
  1465  067E  0008               	return
  1466  067F                     __end_of_Lcd_Cmd:
  1467                           
  1468                           	psect	text9
  1469  0621                     __ptext9:	
  1470 ;; *************** function _Lcd_Port *****************
  1471 ;; Defined at:
  1472 ;;		line 4 in file "C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  a               1    wreg     unsigned char 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  a               1    0[COMMON] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         1       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0
  1489 ;;      Totals:         1       0       0       0       0
  1490 ;;Total ram usage:        1 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_Lcd_Cmd
  1496 ;;		_Lcd_Init
  1497 ;;		_Lcd_Write_Char
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _Lcd_Port
  1503  0621                     _Lcd_Port:
  1504                           
  1505                           ;incstack = 0
  1506                           ; Regs used in _Lcd_Port: [wreg]
  1507                           ;Lcd_Port@a stored from wreg
  1508  0621  00F0               	movwf	Lcd_Port@a
  1509  0622                     l679:
  1510                           
  1511                           ;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h: 4: void Lcd_Port(char a);C:/MPlab_Digi
      +                          tal2/Digital_2/Prueba_UART.X/lcd.h: 5: {;C:/MPlab_Digital2/Digital_2/Prueba_UART.X/lcd.h
      +                          : 6:     PORTD = a;
  1512  0622  0870               	movf	Lcd_Port@a,w
  1513  0623  1283               	bcf	3,5	;RP0=0, select bank0
  1514  0624  1303               	bcf	3,6	;RP1=0, select bank0
  1515  0625  0088               	movwf	8	;volatile
  1516  0626                     l45:
  1517  0626  0008               	return
  1518  0627                     __end_of_Lcd_Port:
  1519  007E                     btemp	set	126	;btemp
  1520  007E                     wtemp0	set	126
  1521                           
  1522                           	psect	config
  1523                           
  1524                           ;Config register CONFIG1 @ 0x2007
  1525                           ;	Oscillator Selection bits
  1526                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1527                           ;	Watchdog Timer Enable bit
  1528                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1529                           ;	Power-up Timer Enable bit
  1530                           ;	PWRTE = OFF, PWRT disabled
  1531                           ;	RE3/MCLR pin function select bit
  1532                           ;	MCLRE = 0x1, unprogrammed default
  1533                           ;	Code Protection bit
  1534                           ;	CP = OFF, Program memory code protection is disabled
  1535                           ;	Data Code Protection bit
  1536                           ;	CPD = OFF, Data memory code protection is disabled
  1537                           ;	Brown Out Reset Selection bits
  1538                           ;	BOREN = ON, BOR enabled
  1539                           ;	Internal External Switchover bit
  1540                           ;	IESO = 0x1, unprogrammed default
  1541                           ;	Fail-Safe Clock Monitor Enabled bit
  1542                           ;	FCMEN = 0x1, unprogrammed default
  1543                           ;	Low Voltage Programming Enable bit
  1544                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1545                           ;	In-Circuit Debugger Mode bit
  1546                           ;	DEBUG = 0x1, unprogrammed default
  1547  2007                     	org	8199
  1548  2007  2FF2               	dw	12274
  1549                           
  1550                           ;Config register CONFIG2 @ 0x2008
  1551                           ;	Brown-out Reset Selection bit
  1552                           ;	BOR4V = 0x1, unprogrammed default
  1553                           ;	Flash Program Memory Self Write Enable bits
  1554                           ;	WRT = OFF, Write protection off
  1555  2008                     	org	8200
  1556  2008  3FFF               	dw	16383

Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[10]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1162
                                              7 COMMON     5     5      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     285
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      30
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0      30
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0      30
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     620
                                              4 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      45
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      30
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      30
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Feb 06 02:37:41 2021

                        pc 0002                         l51 0633                         l60 070E  
                       l45 0626                         l63 0664                         l48 067E  
                       l72 064D                         l57 06A2                         l75 0640  
                       l69 06C7                         u60 0685                         u61 0684  
                       u70 0697                         u71 0696                         u80 06C7  
                       u81 06C6                         u90 07AF                         u91 07AE  
                       fsr 0004                        l701 0663                        l703 0627  
                      l721 06D7                        l723 06E6                        l725 06EC  
                      l717 06C8                        l901 07A6                        l719 06CE  
                      l735 0641                        l911 07BE                        l903 07AF  
                      l681 0666                        l841 0691                        l737 0634  
                      l921 07DF                        l913 07C3                        l683 0669  
                      l843 0697                        l835 0680                        l691 064F  
                      l851 06B4                        l923 07E5                        l915 07C9  
                      l685 066F                        l845 069C                        l837 0685  
                      l693 0652                        l853 06BA                        l925 07EB  
                      l917 07D2                        l909 07B1                        l861 0722  
                      l679 0622                        l687 0672                        l839 068A  
                      l695 0658                        l847 06A4                        l919 07D7  
                      l871 074B                        l863 072A                        l855 070F  
                      l689 067B                        l697 065B                        l849 06A7  
                      l881 076C                        l873 0750                        l865 0730  
                      l857 0718                        l699 0660                        l883 0779  
                      l875 0758                        l867 0738                        l859 071D  
                      l885 077E                        l877 075E                        l869 073E  
                      l895 078E                        l887 0786                        l879 0766  
                      l897 079B                        l889 078C                        l899 07A0  
                      _RE0 0048                        u100 07D2                        _RE2 004A  
                      u101 07D1                        u117 0744                        u207 0676  
                      u127 0772                        u137 0794                        u147 07B7  
                      u157 07F1                        u167 065D                        u177 06D2  
                      u187 06E1                        u197 06EE                        fsr0 0004  
                     STR_1 001D                       STR_2 0046                       STR_3 002D  
                     STR_4 003A                       STR_5 0009          ?_Lcd_Write_String 0070  
                     _main 070F                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0073            __end_of_Lcd_Cmd 067F                      ?_main 0070  
                    _ANSEL 0188                      _SPBRG 0099                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0024                      _TRISD 0088                      _TRISE 0089  
  __size_of_Lcd_Shift_Left 000D                      main@a 007A                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 070F  
         __end_of_Lcd_Port 0627            __initialization 07FC               __end_of_main 07FC  
                   ??_main 0077         __size_of_Lcd_Clear 000D                  ??_Lcd_Cmd 0071  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0017   __size_of_Lcd_Shift_Right 000D  
          Lcd_Set_Cursor@a 0075            Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 0634             __pcstackCOMMON 0070             _Lcd_Set_Cursor 067F  
           _Lcd_Shift_Left 0634                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pmaintext 070F  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 06A3  
   __end_of_Lcd_Shift_Left 0641          ??_Lcd_Shift_Right 0074                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                 __stringtab 0003             _Lcd_Write_Char 064E  
                  _Lcd_Cmd 0665            ?_Lcd_Set_Cursor 0074                    __ptext1 06A3  
                  __ptext2 064E                    __ptext3 0641                    __ptext4 0634  
                  __ptext5 067F                    __ptext6 06C8                    __ptext7 0627  
                  __ptext8 0665                    __ptext9 0621            ?_Lcd_Shift_Left 0070  
   __end_of_Lcd_Write_Char 0665       end_of_initialization 07FC                  _RCSTAbits 0018  
                Lcd_Port@a 0070            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075  
        Lcd_Write_String@i 0073                  _TXSTAbits 0098                  _Lcd_Clear 0627  
         _Lcd_Write_String 06A3                _BAUDCTLbits 0187        start_initialization 07FC  
        __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006                 ?_Lcd_Clear 0070  
          _Lcd_Shift_Right 0641            Lcd_Write_Char@a 0072                  ___latbits 0002  
                 ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075           ??_Lcd_Shift_Left 0074  
                __pstrings 0003    __end_of_Lcd_Shift_Right 064E                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074                __stringbase 0008           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 06C8                   _Lcd_Port 0621   __end_of_Lcd_Write_String 06C8  
         __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009              __size_of_main 00ED  
         ?_Lcd_Shift_Right 0070                  stringcode 0003                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0076                   stringdir 0003                   stringtab 0003  
